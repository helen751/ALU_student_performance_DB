-- Create a database for tracking all alu student performance
CREATE DATABASE ALU_student_performance_DB;

-- Switch to using the new database
USE ALU_student_performance_DB;

-- creating the students table storing their ID, name and intake
CREATE TABLE students (
    student_id INT AUTO_INCREMENT PRIMARY KEY,   -- unique ID and Primary key, automatically generated by the system
    student_name VARCHAR(100) NOT NULL,          -- student full name
    intake_year YEAR NOT NULL                    -- the intake year
);

-- creating the linux grade table that stores the linux course grades of all students present in the students table
CREATE TABLE linux_grades (
    course_id VARCHAR(10) default 'Lin2025-01',              -- Unique ID for the course set at default
    course_name VARCHAR(50) DEFAULT 'Linux',     -- course name, default "Linux"
    student_id INT,                              -- Foreign Key referencing students ID
    -- student grade with CHECK constraint, limited to numbers from 0-100
    grade_obtained INT CHECK (grade_obtained BETWEEN 0 AND 100),

    PRIMARY KEY (course_id, student_id),         -- ensures one grade per student per course
    -- creating the relationship, referencing the student_id in this table to the student_id in students table
    FOREIGN KEY (student_id) REFERENCES students(student_id)
);

-- creating the python grades table to store records of all students python grades
CREATE TABLE python_grades (
    course_id VARCHAR(10) default 'Pyt2025-01',              -- Unique ID for the course set at default
    course_name VARCHAR(50) DEFAULT 'Python',     -- course name, default "Python"
    student_id INT,                              -- Foreign Key referencing students ID
    -- student grade with CHECK constraint, limited to numbers from 0-100
    grade_obtained INT CHECK (grade_obtained BETWEEN 0 AND 100),

    PRIMARY KEY (course_id, student_id),         -- ensures one grade per student per course
    -- creating the relationship, referencing the student_id in this table to the student_id in students table
    FOREIGN KEY (student_id) REFERENCES students(student_id)
);

INSERT INTO students (student_name, intake_year) VALUES
('Helen Okereke', 2025),
('Grace Karimi Njunge', 2025),
('Cindy Saro Teta', 2025),
('Erioluwa Mercy Akintayo', 2025),
('Bendou Janna Vitalina', 2025),
('Shyaka Francis', 2025),
('Kevin Muriithi', 2025),
('Martha Nansubuga', 2025),
('Tawanda Chikore', 2025),
('Aisha Abdalla', 2025),
('Jean Bosco Habimana', 2025),
('Sarah Kwizera', 2025),
('Daniel Okoth', 2025),
('Fatoumata Diallo', 2025),
('Peter Mugisha', 2025);

INSERT INTO python_grades (student_id, grade_obtained) VALUES
(1, 91),
(2, 86),
(3, 79),
(4, 88),
(5, 77),
(6, 94),
(7, 82),
(8, 73),
(9, 65),
(10, 97),
(11, 84),
(12, 90),
(13, 69),
(14, 72),
(15, 89);

select * from students;
select * from linux_grades;
select * from python_grades;
